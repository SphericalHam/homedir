#!/usr/bin/perl

use warnings;
use strict;

# We need a regex for ipv6 addresses

print "Give me an IPv6 address, you bum! Address: ";
my $line = <STDIN>;
chomp $line;

# We'll stick a quick regex here to make sure its valid
# and die if its not.  So, no need for any subsequent code to account for
# an invalid address.  

my @part = split /::/, $line;
my $num_chunks = 0;
foreach (@part) {
	my @chunks = split /:/;
	$num_chunks += @chunks;
}

# Add the proper number of chunks to the middle of the array
# The single 0's will be fleshed out later.
if (8 - $num_chunks != 0) {
	$part[2] = $part[1];
	$part[1] = join(':', split(//, ("0" x (8 - $num_chunks))));
}

# At this stage, we have an address with exactly 8 groups of 
# 4 or less hex digits each.  The missing hex digits are always
# the most significan 0's.  
my @final_address;
foreach (@part) {
	my @chunks = split /:/;
	foreach (@chunks) {
		my $chunk = $_;
		my $padding = "0" x (4 - length $chunk);
		$chunk = $padding . $chunk;
		push @final_address, $chunk;
	}
}
print join(':', split(/ /, "@final_address"));
print "\n";
